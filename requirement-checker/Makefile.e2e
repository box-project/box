# See https://tech.davis-hansson.com/p/make/
MAKEFLAGS += --warn-undefined-variables
MAKEFLAGS += --no-builtin-rules

SCOPED_BOX_BIN = ../bin/box.phar
SCOPED_BOX = $(SCOPED_BOX_BIN)

DIFF = diff --strip-trailing-cr --ignore-all-space --side-by-side --suppress-common-lines

DOCKER_RUN = docker run --interactive --platform linux/amd64 --rm --workdir=/opt/box

# Matches the minimum PHP version supported by Composer.
DOCKER_MIN_COMPOSER_PHP_VERSION_IMAGE_TAG = ghcr.io/box-project/box_php725
DOCKER_MIN_COMPOSER_PHP_VERSION_RUN_COMMAND = $(DOCKER_MIN_COMPOSER_PHP_VERSION_IMAGE_TAG) php index.phar -vvv --no-ansi

# Matches the minimum PHP version supported by Box.
DOCKER_MIN_BOX_PHP_VERSION_IMAGE_TAG = ghcr.io/box-project/box_php82
DOCKER_MIN_BOX_PHP_VERSION_RUN_COMMAND = $(DOCKER_MIN_BOX_PHP_VERSION_IMAGE_TAG) php index.phar -vvv --no-ansi

E2E_TEST_PASS_NO_CONFIG_DIR := fixtures/pass-no-config
E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR := dist/fixtures/pass-no-config
E2E_TEST_PASS_NO_CONFIG_PHAR := $(E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR)/index.phar
E2E_TEST_PASS_NO_CONFIG_PHAR_SRC := $(shell find $(E2E_TEST_PASS_NO_CONFIG_DIR))
E2E_TEST_PASS_NO_CONFIG_MIN_COMPOSER_EXPECTED_STDOUT := $(E2E_TEST_PASS_NO_CONFIG_DIR)/expected-stdout
E2E_TEST_PASS_NO_CONFIG_MIN_COMPOSER_EXPECTED_STDERR := $(E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR)/expected-composermin-stderr
E2E_TEST_PASS_NO_CONFIG_MIN_COMPOSER_EXPECTED_STDERR_TEMPLATE := $(E2E_TEST_PASS_NO_CONFIG_DIR)/expected-composermin-stderr.dist
E2E_TEST_PASS_NO_CONFIG_MIN_BOX_EXPECTED_STDOUT := $(E2E_TEST_PASS_NO_CONFIG_DIR)/expected-stdout
E2E_TEST_PASS_NO_CONFIG_MIN_BOX_EXPECTED_STDERR := $(E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR)/expected-boxmin-stderr
E2E_TEST_PASS_NO_CONFIG_MIN_BOX_EXPECTED_STDERR_TEMPLATE := $(E2E_TEST_PASS_NO_CONFIG_DIR)/expected-boxmin-stderr.dist
E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDOUT := $(E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR)/actual-stdout
E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDERR := $(E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR)/actual-stderr

E2E_TEST_PASS_COMPLETE_DIR := fixtures/pass-complete
E2E_TEST_PASS_COMPLETE_OUTPUT_DIR := dist/fixtures/pass-complete
E2E_TEST_PASS_COMPLETE_VENDOR := $(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)/vendor
E2E_TEST_PASS_COMPLETE_PHAR := $(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)/index.phar
E2E_TEST_PASS_COMPLETE_PHAR_SRC := $(shell find $(E2E_TEST_PASS_COMPLETE_DIR))
E2E_TEST_PASS_COMPLETE_MIN_COMPOSER_EXPECTED_STDOUT := $(E2E_TEST_PASS_COMPLETE_DIR)/expected-stdout
E2E_TEST_PASS_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR := $(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)/expected-composermin-stderr
E2E_TEST_PASS_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR_TEMPLATE := $(E2E_TEST_PASS_COMPLETE_DIR)/expected-composermin-stderr.dist
E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDOUT := $(E2E_TEST_PASS_COMPLETE_DIR)/expected-stdout
E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR := $(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)/expected-boxmin-stderr
E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR_TEMPLATE := $(E2E_TEST_PASS_COMPLETE_DIR)/expected-boxmin-stderr.dist
E2E_TEST_PASS_COMPLETE_ACTUAL_STDOUT := $(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)/actual-stdout
E2E_TEST_PASS_COMPLETE_ACTUAL_STDERR := $(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)/actual-stderr

E2E_TEST_FAIL_COMPLETE_DIR := fixtures/fail-complete
E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR := dist/fixtures/fail-complete
E2E_TEST_FAIL_COMPLETE_VENDOR := $(E2E_TEST_FAIL_COMPLETE_DIR)/vendor
E2E_TEST_FAIL_COMPLETE_PHAR := $(E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR)/index.phar
E2E_TEST_FAIL_COMPLETE_PHAR_SRC := $(shell find $(E2E_TEST_FAIL_COMPLETE_DIR))
E2E_TEST_FAIL_COMPLETE_MIN_COMPOSER_EXPECTED_STDOUT := $(E2E_TEST_FAIL_COMPLETE_DIR)/expected-stdout
E2E_TEST_FAIL_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR := $(E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR)/expected-composermin-stderr
E2E_TEST_FAIL_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR_TEMPLATE := $(E2E_TEST_FAIL_COMPLETE_DIR)/expected-composermin-stderr.dist
E2E_TEST_FAIL_COMPLETE_MIN_BOX_EXPECTED_STDOUT := $(E2E_TEST_FAIL_COMPLETE_DIR)/expected-stdout
E2E_TEST_FAIL_COMPLETE_MIN_BOX_EXPECTED_STDERR := $(E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR)/expected-boxmin-stderr
E2E_TEST_FAIL_COMPLETE_MIN_BOX_EXPECTED_STDERR_TEMPLATE := $(E2E_TEST_FAIL_COMPLETE_DIR)/expected-boxmin-stderr.dist
E2E_TEST_FAIL_COMPLETE_ACTUAL_STDOUT := $(E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR)/actual-stdout
E2E_TEST_FAIL_COMPLETE_ACTUAL_STDERR := $(E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR)/actual-stderr

E2E_TEST_FAIL_CONFLICT_DIR := fixtures/fail-conflict
E2E_TEST_FAIL_CONFLICT_OUTPUT_DIR := dist/fixtures/fail-conflict
E2E_TEST_FAIL_CONFLICT_VENDOR := $(E2E_TEST_FAIL_CONFLICT_DIR)/vendor
E2E_TEST_FAIL_CONFLICT_PHAR := $(E2E_TEST_FAIL_CONFLICT_OUTPUT_DIR)/index.phar
E2E_TEST_FAIL_CONFLICT_PHAR_SRC := $(shell find $(E2E_TEST_FAIL_CONFLICT_DIR))
E2E_TEST_FAIL_CONFLICT_MIN_BOX_EXPECTED_STDOUT := $(E2E_TEST_FAIL_CONFLICT_DIR)/expected-stdout
E2E_TEST_FAIL_CONFLICT_MIN_BOX_EXPECTED_STDERR := $(E2E_TEST_FAIL_CONFLICT_OUTPUT_DIR)/expected-boxmin-stderr
E2E_TEST_FAIL_CONFLICT_MIN_BOX_EXPECTED_STDERR_TEMPLATE := $(E2E_TEST_FAIL_CONFLICT_DIR)/expected-boxmin-stderr.dist
E2E_TEST_FAIL_CONFLICT_ACTUAL_STDOUT := $(E2E_TEST_FAIL_CONFLICT_OUTPUT_DIR)/actual-stdout
E2E_TEST_FAIL_CONFLICT_ACTUAL_STDERR := $(E2E_TEST_FAIL_CONFLICT_OUTPUT_DIR)/actual-stderr

E2E_TEST_SKIP_DIR := fixtures/fail-complete
E2E_TEST_SKIP_OUTPUT_DIR := dist/fixtures/skip
E2E_TEST_SKIP_PHAR := $(E2E_TEST_SKIP_OUTPUT_DIR)/index.phar
E2E_TEST_SKIP_EXPECTED_STDOUT := $(E2E_TEST_SKIP_DIR)/expected-skipped-stdout
E2E_TEST_SKIP_EXPECTED_STDERR := $(E2E_TEST_SKIP_DIR)/expected-skipped-stderr
E2E_TEST_SKIP_ACTUAL_STDOUT := $(E2E_TEST_SKIP_OUTPUT_DIR)/actual-stdout
E2E_TEST_SKIP_ACTUAL_STDERR := $(E2E_TEST_SKIP_OUTPUT_DIR)/actual-stderr


#
# Pass No Config
#---------------------------------------------------------------------------

.PHONY: test_e2e_pass_no_config_min_composer_php
test_e2e_pass_no_config_min_composer_php: docker_images _test_e2e_pass_no_config_min_composer_php

.PHONY: _test_e2e_pass_no_config_min_composer_php
_test_e2e_pass_no_config_min_composer_php: $(E2E_TEST_PASS_NO_CONFIG_PHAR)
	@echo "$(YELLOW_COLOR)Test RequirementChecker with a project with no configuration (min PHP version supported by Composer).$(NO_COLOR)"
	@rm \
		$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDOUT) \
		$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDERR) \
		$(E2E_TEST_PASS_NO_CONFIG_MIN_COMPOSER_EXPECTED_STDERR) || true
	@$(MAKE) $(E2E_TEST_PASS_NO_CONFIG_MIN_COMPOSER_EXPECTED_STDERR)

	$(DOCKER_RUN) \
		--volume="$$PWD/$(E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR)":/opt/box \
		$(DOCKER_MIN_COMPOSER_PHP_VERSION_RUN_COMMAND) 1>$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDOUT) 2>$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDERR) \
		|| true

	$(DIFF) \
		$(E2E_TEST_PASS_NO_CONFIG_MIN_COMPOSER_EXPECTED_STDERR) \
		$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDERR)
	$(DIFF) \
		$(E2E_TEST_PASS_NO_CONFIG_MIN_COMPOSER_EXPECTED_STDOUT) \
		$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDOUT)


.PHONY: test_e2e_pass_no_config_min_box_php
test_e2e_pass_no_config_min_box_php: docker_images _test_e2e_pass_no_config_min_box_php

.PHONY: _test_e2e_pass_no_config_min_box_php
_test_e2e_pass_no_config_min_box_php: $(E2E_TEST_PASS_NO_CONFIG_PHAR)
	@echo "$(YELLOW_COLOR)Test RequirementChecker with a project with no configuration (min PHP version supported by Box).$(NO_COLOR)"
	@rm \
		$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDOUT) \
		$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDERR) \
		$(E2E_TEST_PASS_NO_CONFIG_MIN_BOX_EXPECTED_STDERR) || true
	@$(MAKE) $(E2E_TEST_PASS_NO_CONFIG_MIN_BOX_EXPECTED_STDERR)

	$(DOCKER_RUN) \
		--volume="$$PWD/$(E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR)":/opt/box \
		$(DOCKER_MIN_BOX_PHP_VERSION_RUN_COMMAND) 1>$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDOUT) 2>$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDERR) \
		|| true

	$(DIFF) \
		$(E2E_TEST_PASS_NO_CONFIG_MIN_BOX_EXPECTED_STDERR) \
		$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDERR)
	$(DIFF) \
		$(E2E_TEST_PASS_NO_CONFIG_MIN_BOX_EXPECTED_STDOUT) \
		$(E2E_TEST_PASS_NO_CONFIG_ACTUAL_STDOUT)


#
# Pass Complete
#---------------------------------------------------------------------------

.PHONY: test_e2e_pass_complete_min_composer_php
test_e2e_pass_complete_min_composer_php: docker_images _test_e2e_pass_complete_min_composer_php

.PHONY: _test_e2e_pass_complete_min_composer_php
_test_e2e_pass_complete_min_composer_php: $(E2E_TEST_PASS_COMPLETE_PHAR)
	@echo "$(YELLOW_COLOR)Test RequirementChecker with a project with satisfied requirements (min PHP version supported by Composer).$(NO_COLOR)"
	@rm \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDOUT) \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDERR) \
		$(E2E_TEST_PASS_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR) || true
	@$(MAKE) $(E2E_TEST_PASS_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR)

	$(DOCKER_RUN) \
		--volume="$$PWD/$(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)":/opt/box \
		$(DOCKER_MIN_COMPOSER_PHP_VERSION_RUN_COMMAND) 1>$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDOUT) 2>$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDERR) \
		|| true

	$(DIFF) \
		$(E2E_TEST_PASS_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR) \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDERR)
	$(DIFF) \
		$(E2E_TEST_PASS_COMPLETE_MIN_COMPOSER_EXPECTED_STDOUT) \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDOUT)


.PHONY: test_e2e_pass_complete_min_box_php
test_e2e_pass_complete_min_box_php: docker_images _test_e2e_pass_complete_min_box_php

.PHONY: _test_e2e_pass_complete_min_box_php
_test_e2e_pass_complete_min_box_php: $(E2E_TEST_PASS_COMPLETE_PHAR)
	@echo "$(YELLOW_COLOR)Test RequirementChecker with a project with satisfied requirements (min PHP version supported by Box).$(NO_COLOR)"
	@rm \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDOUT) \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDERR) \
		$(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR) || true
	@$(MAKE) $(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR)

	$(DOCKER_RUN) \
		--volume="$$PWD/$(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)":/opt/box \
		$(DOCKER_MIN_BOX_PHP_VERSION_RUN_COMMAND) 1>$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDOUT) 2>$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDERR) \
		|| true

	$(DIFF) \
		$(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR) \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDERR)
	$(DIFF) \
		$(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDOUT) \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDOUT)



.PHONY: test_e2e_pass_complete_requirement_checker_not_disabled
test_e2e_pass_complete_requirement_checker_not_disabled: docker_images _test_e2e_pass_complete_requirement_checker_not_disabled

.PHONY: _test_e2e_pass_complete_requirement_checker_not_disabled
_test_e2e_pass_complete_requirement_checker_not_disabled: $(E2E_TEST_PASS_COMPLETE_PHAR)
	@echo "$(YELLOW_COLOR)Test RequirementChecker with a project with satisfied requirements with requirement checker not disabled.$(NO_COLOR)"
	@rm \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDOUT) \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDERR) \
		$(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR) || true
	@$(MAKE) $(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR)

	$(DOCKER_RUN) \
		--env="BOX_REQUIREMENT_CHECKER=1" \
		--volume="$$PWD/$(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)":/opt/box \
		$(DOCKER_MIN_BOX_PHP_VERSION_RUN_COMMAND) 1>$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDOUT) 2>$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDERR) \
		|| true

	$(DIFF) \
		$(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR) \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDERR)
	$(DIFF) \
		$(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDOUT) \
		$(E2E_TEST_PASS_COMPLETE_ACTUAL_STDOUT)


#
# Fail Complete
#---------------------------------------------------------------------------

.PHONY: test_e2e_fail_complete_min_composer_php
test_e2e_fail_complete_min_composer_php: docker_images _test_e2e_fail_complete_min_composer_php

.PHONY: _test_e2e_fail_complete_min_composer_php
_test_e2e_fail_complete_min_composer_php: $(E2E_TEST_FAIL_COMPLETE_PHAR)
	@echo "$(YELLOW_COLOR)Test RequirementChecker with a project with non-satisfied requirements (min PHP version supported by Composer).$(NO_COLOR)"
	@rm \
		$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDOUT) \
		$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDERR) \
		$(E2E_TEST_FAIL_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR) || true
	@$(MAKE) $(E2E_TEST_FAIL_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR)

	$(DOCKER_RUN) \
		--volume="$$PWD/$(E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR)":/opt/box \
		$(DOCKER_MIN_COMPOSER_PHP_VERSION_RUN_COMMAND) 1>$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDOUT) 2>$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDERR) \
		|| true

	$(DIFF) \
		$(E2E_TEST_FAIL_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR) \
		$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDERR)
	$(DIFF) \
		$(E2E_TEST_FAIL_COMPLETE_MIN_COMPOSER_EXPECTED_STDOUT) \
		$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDOUT)


.PHONY: test_e2e_fail_complete_min_box_php
test_e2e_fail_complete_min_box_php: docker_images _test_e2e_fail_complete_min_box_php

.PHONY: _test_e2e_fail_complete_min_box_php
_test_e2e_fail_complete_min_box_php: $(E2E_TEST_FAIL_COMPLETE_PHAR)
	@echo "$(YELLOW_COLOR)Test RequirementChecker with a project with non-satisfied requirements (min PHP version supported by Box).$(NO_COLOR)"
	@rm \
		$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDOUT) \
		$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDERR) \
		$(E2E_TEST_FAIL_COMPLETE_MIN_BOX_EXPECTED_STDERR) || true
	@$(MAKE) $(E2E_TEST_FAIL_COMPLETE_MIN_BOX_EXPECTED_STDERR)

	$(DOCKER_RUN) \
		--volume="$$PWD/$(E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR)":/opt/box \
		$(DOCKER_MIN_BOX_PHP_VERSION_RUN_COMMAND) 1>$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDOUT) 2>$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDERR) \
		|| true

	$(DIFF) \
		$(E2E_TEST_FAIL_COMPLETE_MIN_BOX_EXPECTED_STDERR) \
		$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDERR)
	$(DIFF) \
		$(E2E_TEST_FAIL_COMPLETE_MIN_BOX_EXPECTED_STDOUT) \
		$(E2E_TEST_FAIL_COMPLETE_ACTUAL_STDOUT)


.PHONY: test_e2e_fail_conflict
test_e2e_fail_conflict: docker_images _test_e2e_fail_conflict

.PHONY: _test_e2e_fail_conflict
_test_e2e_fail_conflict: $(E2E_TEST_FAIL_CONFLICT_PHAR)
	@echo "$(YELLOW_COLOR)Test RequirementChecker with a project with non-satisfied requirements (conflicting extension loaded).$(NO_COLOR)"
	@rm \
		$(E2E_TEST_FAIL_CONFLICT_ACTUAL_STDOUT) \
		$(E2E_TEST_FAIL_CONFLICT_ACTUAL_STDERR) \
		$(E2E_TEST_FAIL_CONFLICT_MIN_BOX_EXPECTED_STDERR) || true
	@$(MAKE) $(E2E_TEST_FAIL_CONFLICT_MIN_BOX_EXPECTED_STDERR)

	$(DOCKER_RUN) \
		--volume="$$PWD/$(E2E_TEST_FAIL_CONFLICT_OUTPUT_DIR)":/opt/box \
		$(DOCKER_MIN_BOX_PHP_VERSION_RUN_COMMAND) 1>$(E2E_TEST_FAIL_CONFLICT_ACTUAL_STDOUT) 2>$(E2E_TEST_FAIL_CONFLICT_ACTUAL_STDERR) \
		|| true

	$(DIFF) \
		$(E2E_TEST_FAIL_CONFLICT_MIN_BOX_EXPECTED_STDERR) \
		$(E2E_TEST_FAIL_CONFLICT_ACTUAL_STDERR)
	$(DIFF) \
		$(E2E_TEST_FAIL_CONFLICT_MIN_BOX_EXPECTED_STDOUT) \
		$(E2E_TEST_FAIL_CONFLICT_ACTUAL_STDOUT)


#
# Skip the requirement check
#---------------------------------------------------------------------------

.PHONY: test_e2e_skip_min_composer_php
test_e2e_skip_min_composer_php: docker_images _test_e2e_skip_min_composer_php

.PHONY: _test_e2e_skip_min_composer_php
_test_e2e_skip_min_composer_php: $(E2E_TEST_SKIP_PHAR)
	@echo "$(YELLOW_COLOR)Test skipping the RequirementChecker with a project with non-satisfied requirements.$(NO_COLOR)"
	@rm \
		$(E2E_TEST_SKIP_ACTUAL_STDERR) \
		$(E2E_TEST_SKIP_ACTUAL_STDOUT) \
		|| true

	$(DOCKER_RUN) \
		--env="BOX_REQUIREMENT_CHECKER=0" \
		--volume="$$PWD/$(E2E_TEST_SKIP_OUTPUT_DIR)":/opt/box \
		$(DOCKER_MIN_COMPOSER_PHP_VERSION_RUN_COMMAND) 1>$(E2E_TEST_SKIP_ACTUAL_STDOUT) 2>$(E2E_TEST_SKIP_ACTUAL_STDERR) \
		|| true

	$(DIFF) \
		$(E2E_TEST_SKIP_EXPECTED_STDERR) \
		$(E2E_TEST_SKIP_ACTUAL_STDERR)
	$(DIFF) \
		$(E2E_TEST_SKIP_EXPECTED_STDOUT) \
		$(E2E_TEST_SKIP_ACTUAL_STDOUT)


#
# Rules from files
#---------------------------------------------------------------------------

.PHONY: docker_images
docker_images:
	@# The caching is taken care of within the script
	@./../.docker/build

$(E2E_TEST_PASS_NO_CONFIG_PHAR): $(SCOPED_BOX_BIN) $(shell find $(E2E_TEST_PASS_NO_CONFIG_DIR))
	$(SCOPED_BOX) compile --ansi --working-dir=$(E2E_TEST_PASS_NO_CONFIG_DIR) --no-parallel
	mkdir -p $(E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR)
	mv $(E2E_TEST_PASS_NO_CONFIG_DIR)/index.phar $(E2E_TEST_PASS_NO_CONFIG_PHAR)
	touch -c $(E2E_TEST_PASS_NO_CONFIG_PHAR)
$(E2E_TEST_PASS_NO_CONFIG_DIR)/composer.lock: $(E2E_TEST_PASS_NO_CONFIG_DIR)/composer.json
$(E2E_TEST_PASS_NO_CONFIG_MIN_COMPOSER_EXPECTED_STDERR): $(E2E_TEST_PASS_NO_CONFIG_MIN_COMPOSER_EXPECTED_STDERR_TEMPLATE)
	mkdir -p $(E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR)
	sed "s/PHP_VERSION/$$($(DOCKER_RUN) $(DOCKER_MIN_COMPOSER_PHP_VERSION_IMAGE_TAG) php -r 'echo PHP_VERSION;')/" \
		$(E2E_TEST_PASS_NO_CONFIG_MIN_COMPOSER_EXPECTED_STDERR_TEMPLATE) \
		> $@
$(E2E_TEST_PASS_NO_CONFIG_MIN_BOX_EXPECTED_STDERR): $(E2E_TEST_PASS_NO_CONFIG_MIN_BOX_EXPECTED_STDERR_TEMPLATE)
	mkdir -p $(E2E_TEST_PASS_NO_CONFIG_OUTPUT_DIR)
	sed "s/PHP_VERSION/$$($(DOCKER_RUN) $(DOCKER_MIN_BOX_PHP_VERSION_IMAGE_TAG) php -r 'echo PHP_VERSION;')/" \
		$(E2E_TEST_PASS_NO_CONFIG_MIN_BOX_EXPECTED_STDERR_TEMPLATE) \
		> $@

$(E2E_TEST_PASS_COMPLETE_PHAR): $(SCOPED_BOX_BIN) $(E2E_TEST_PASS_COMPLETE_PHAR_SRC)
	$(SCOPED_BOX) compile --ansi --working-dir=$(E2E_TEST_PASS_COMPLETE_DIR) --no-parallel
	mkdir -p $(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)
	mv $(E2E_TEST_PASS_COMPLETE_DIR)/index.phar $(E2E_TEST_PASS_COMPLETE_PHAR)
	touch -c $(E2E_TEST_PASS_COMPLETE_PHAR)
$(E2E_TEST_PASS_COMPLETE_VENDOR): $(E2E_TEST_PASS_COMPLETE_DIR)/composer.lock
$(E2E_TEST_PASS_COMPLETE_DIR)/composer.lock: $(E2E_TEST_PASS_COMPLETE_DIR)/composer.json
$(E2E_TEST_PASS_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR): $(E2E_TEST_PASS_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR_TEMPLATE)
	mkdir -p $(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)
	sed "s/PHP_VERSION/$$($(DOCKER_RUN) $(DOCKER_MIN_COMPOSER_PHP_VERSION_IMAGE_TAG) php -r 'echo PHP_VERSION;')/" \
		$(E2E_TEST_PASS_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR_TEMPLATE) \
		> $@
$(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR): $(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR_TEMPLATE)
	mkdir -p $(E2E_TEST_PASS_COMPLETE_OUTPUT_DIR)
	sed "s/PHP_VERSION/$$($(DOCKER_RUN) $(DOCKER_MIN_BOX_PHP_VERSION_IMAGE_TAG) php -r 'echo PHP_VERSION;')/" \
		$(E2E_TEST_PASS_COMPLETE_MIN_BOX_EXPECTED_STDERR_TEMPLATE) \
		> $@

$(E2E_TEST_FAIL_COMPLETE_PHAR): $(SCOPED_BOX_BIN) $(E2E_TEST_FAIL_COMPLETE_PHAR_SRC)
	$(SCOPED_BOX) compile --ansi --working-dir=$(E2E_TEST_FAIL_COMPLETE_DIR) --no-parallel
	mkdir -p $(E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR)
	mv $(E2E_TEST_FAIL_COMPLETE_DIR)/index.phar $(E2E_TEST_FAIL_COMPLETE_PHAR)
	touch -c $(E2E_TEST_FAIL_COMPLETE_PHAR)
$(E2E_TEST_FAIL_COMPLETE_VENDOR): $(E2E_TEST_FAIL_COMPLETE_DIR)/composer.lock
$(E2E_TEST_FAIL_COMPLETE_DIR)/composer.lock: $(E2E_TEST_FAIL_COMPLETE_DIR)/composer.json
$(E2E_TEST_FAIL_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR): $(E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR) $(E2E_TEST_FAIL_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR_TEMPLATE)
	sed "s/PHP_VERSION/$$($(DOCKER_RUN) $(DOCKER_MIN_COMPOSER_PHP_VERSION_IMAGE_TAG) php -r 'echo PHP_VERSION;')/" \
		$(E2E_TEST_FAIL_COMPLETE_MIN_COMPOSER_EXPECTED_STDERR_TEMPLATE) \
		> $@
$(E2E_TEST_FAIL_COMPLETE_MIN_BOX_EXPECTED_STDERR): $(E2E_TEST_FAIL_COMPLETE_OUTPUT_DIR) $(E2E_TEST_FAIL_COMPLETE_MIN_BOX_EXPECTED_STDERR_TEMPLATE)
	sed "s/PHP_VERSION/$$($(DOCKER_RUN) $(DOCKER_MIN_BOX_PHP_VERSION_IMAGE_TAG) php -r 'echo PHP_VERSION;')/" \
		$(E2E_TEST_FAIL_COMPLETE_MIN_BOX_EXPECTED_STDERR_TEMPLATE) \
		> $@

$(E2E_TEST_FAIL_CONFLICT_PHAR): $(SCOPED_BOX_BIN) $(E2E_TEST_FAIL_CONFLICT_PHAR_SRC)
	$(SCOPED_BOX) compile --ansi --working-dir=$(E2E_TEST_FAIL_CONFLICT_DIR) --no-parallel
	mkdir -p $(E2E_TEST_FAIL_CONFLICT_OUTPUT_DIR)
	mv $(E2E_TEST_FAIL_CONFLICT_DIR)/index.phar $(E2E_TEST_FAIL_CONFLICT_PHAR)
	touch -c $(E2E_TEST_FAIL_CONFLICT_PHAR)
$(E2E_TEST_FAIL_CONFLICT_VENDOR): $(E2E_TEST_FAIL_CONFLICT_DIR)/composer.lock
$(E2E_TEST_FAIL_CONFLICT_DIR)/composer.lock: $(E2E_TEST_FAIL_CONFLICT_DIR)/composer.json
$(E2E_TEST_FAIL_CONFLICT_MIN_BOX_EXPECTED_STDERR): $(E2E_TEST_FAIL_CONFLICT_OUTPUT_DIR) $(E2E_TEST_FAIL_CONFLICT_MIN_BOX_EXPECTED_STDERR_TEMPLATE)
	sed "s/PHP_VERSION/$$($(DOCKER_RUN) $(DOCKER_MIN_BOX_PHP_VERSION_IMAGE_TAG) php -r 'echo PHP_VERSION;')/" \
		$(E2E_TEST_FAIL_CONFLICT_MIN_BOX_EXPECTED_STDERR_TEMPLATE) \
		> $@

$(E2E_TEST_SKIP_OUTPUT_DIR):
	mkdir -p $@
	touch -c $@
$(E2E_TEST_SKIP_PHAR): $(E2E_TEST_SKIP_OUTPUT_DIR) $(E2E_TEST_FAIL_COMPLETE_PHAR)
	cp -f $(E2E_TEST_FAIL_COMPLETE_PHAR) $(E2E_TEST_SKIP_PHAR)
	touch -c $@


$(SCOPED_BOX_BIN):
	cd ..; make --file Makefile compile
