4c4
<  * This file is part of the Symfony package.
---
>  * This file is part of the box project.
6c6,7
<  * (c) Fabien Potencier <fabien@symfony.com>
---
>  * (c) Kevin Herrera <kevin@herrera.io>
>  *     Th√©o Fidry <theo.fidry@gmail.com>
8,9c9,10
<  * For the full copyright and license information, please view the LICENSE
<  * file that was distributed with this source code.
---
>  * This source file is subject to the MIT license that is bundled
>  * with this source code in the file LICENSE.
12c13
< namespace Symfony\Component\Console;
---
> namespace KevinGH\RequirementChecker;
13a15,20
> /**
>  * This file is copy/pasted from the Symfony project to avoid a dependency on `symfony/console` which would be too big for just using this
>  * class.
>  *
>  * @license MIT (c) Fabien Potencier <fabien@symfony.com>
>  */
99c106
<     private static function hasVt100Support(): bool
---
>     private static function hasVt100Support()
101c108
<         return \function_exists('sapi_windows_vt100_support') && sapi_windows_vt100_support(fopen('php://stdout', 'w'));
---
>         return \function_exists('sapi_windows_vt100_support') && \sapi_windows_vt100_support(\fopen('php://stdout', 'wb'));
104,106d110
<     /**
<      * Initializes dimensions using the output of an stty columns line.
<      */
127c131
<     private static function getConsoleMode(): ?array
---
>     private static function getConsoleMode()
135c139
<         return [(int) $matches[2], (int) $matches[1]];
---
>         return array((int) $matches[2], (int) $matches[1]);
139a144,145
>      *
>      * @return string|null
141c147
<     private static function getSttyColumns(): ?string
---
>     private static function getSttyColumns()
146c152,157
<     private static function readFromProcess(string $command): ?string
---
>     /**
>      * @param string $command
>      *
>      * @return string|null
>      */
>     private static function readFromProcess($command)
152,155c163,166
<         $descriptorspec = [
<             1 => ['pipe', 'w'],
<             2 => ['pipe', 'w'],
<         ];
---
>         $descriptorspec = array(
>             1 => array('pipe', 'w'),
>             2 => array('pipe', 'w'),
>         );
157c168
<         $process = proc_open($command, $descriptorspec, $pipes, null, null, ['suppress_errors' => true]);
---
>         $process = proc_open($command, $descriptorspec, $pipes, null, null, array('suppress_errors' => true));
