 * This file is part of the Symfony package.		      |	 * This file is part of the box project.
 * (c) Fabien Potencier <fabien@symfony.com>		      |	 * (c) Kevin Herrera <kevin@herrera.io>
							      >	 *     Th√©o Fidry <theo.fidry@gmail.com>
 * For the full copyright and license information, please vie |	 * This source file is subject to the MIT license that is bun
 * file that was distributed with this source code.	      |	 * with this source code in the file LICENSE.
namespace Symfony\Component\Console;			      |	namespace KevinGH\RequirementChecker;
							      >	/**
							      >	 * This file is copy/pasted from the Symfony project to avoid
							      >	 * class.
							      >	 *
							      >	 * @license MIT (c) Fabien Potencier <fabien@symfony.com>
							      >	 */
							      >	     *
							      >	     * @return bool
    public static function hasSttyAvailable(): bool	      |	    public static function hasSttyAvailable()
    private static function hasVt100Support(): bool	      |	    private static function hasVt100Support()
        return \function_exists('sapi_windows_vt100_support') |	        return \function_exists('sapi_windows_vt100_support')
    /**							      <
     * Initializes dimensions using the output of an stty col <
     */							      <
    private static function getConsoleMode(): ?array	      |	    private static function getConsoleMode()
        return [(int) $matches[2], (int) $matches[1]];	      |	        return array((int) $matches[2], (int) $matches[1]);
							      >	     *
							      >	     * @return string|null
    private static function getSttyColumns(): ?string	      |	    private static function getSttyColumns()
    private static function readFromProcess(string $command): |	    /**
							      >	     * @param string $command
							      >	     *
							      >	     * @return string|null
							      >	     */
							      >	    private static function readFromProcess($command)
        $descriptorspec = [				      |	        $descriptorspec = array(
            1 => ['pipe', 'w'],				      |	            1 => array('pipe', 'w'),
            2 => ['pipe', 'w'],				      |	            2 => array('pipe', 'w'),
        ];						      |	        );
        $process = proc_open($command, $descriptorspec, $pipe |	        $process = proc_open($command, $descriptorspec, $pipe
