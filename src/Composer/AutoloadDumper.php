<?php

declare(strict_types=1);

/*
 * This file is part of the box project.
 *
 * (c) Kevin Herrera <kevin@herrera.io>
 *     Th√©o Fidry <theo.fidry@gmail.com>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace KevinGH\Box\Composer;

use Humbug\PhpScoper\Autoload\ScoperAutoloadGenerator;
use Humbug\PhpScoper\Symbol\SymbolsRegistry;
use KevinGH\Box\NotInstantiable;
use function preg_replace;
use function str_replace;
use const PHP_EOL;

final class AutoloadDumper
{
    use NotInstantiable;

    public static function generateAutoloadStatements(
        SymbolsRegistry $symbolsRegistry,
        string $autoloadContents,
    ): string {
        if (0 === $symbolsRegistry->count()) {
            return $autoloadContents;
        }

        $autoloadContents = str_replace('<?php', '', $autoloadContents);

        $autoloadContents = preg_replace(
            '/return (ComposerAutoloaderInit.+::getLoader\(\));/',
            '\$loader = $1;',
            $autoloadContents,
        );

        $scoperStatements = (new ScoperAutoloadGenerator($symbolsRegistry))->dump();

        $scoperStatements = preg_replace(
            '/scoper\-autoload\.php \@generated by PhpScoper/',
            '@generated by Humbug Box',
            $scoperStatements,
        );

        $scoperStatements = preg_replace(
            '/(\s*\\$loader \= .*)/',
            $autoloadContents,
            $scoperStatements,
        );

        return preg_replace(
            '/\n{2,}/m',
            PHP_EOL.PHP_EOL,
            $scoperStatements,
        );
    }
}
