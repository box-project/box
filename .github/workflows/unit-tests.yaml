name: Unit Tests

on:
    push:
        branches: [ main ]
    pull_request:
    release:
        types: [ created ]

env:
    # Comma-space separated list, e.g. '8.1, 8.2, 9.0'
    FUTURE_PHP_VERSION: '9.0'

jobs:
    unit-tests:
        runs-on: ubuntu-latest
        name: "Unit-Tests: ${{ matrix.php }} - ${{ matrix.tools }} - PHAR readonly ${{ matrix.phar-readonly }}"
        strategy:
            fail-fast: false
            matrix:
                php: [ '8.1' ]
                tools: [ "composer:v2" ]
                phar-readonly: [ true, false ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 0

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    # The phar.readonly value is adjusted in the Makefile command for
                    # better portability.
                    ini-values: phar.readonly=0, display_errors=On, error_reporting=-1
                    tools: ${{ matrix.tools }}
                    coverage: none
                    extensions: ctype, iconv, xml

            -   name: Install Composer dependencies
                uses: ramsey/composer-install@v2
                if: contains(env.FUTURE_PHP_VERSION, matrix.php) != true

            -   name: Install RequirementChecker Composer dependencies
                uses: ramsey/composer-install@v2
                if: contains(env.FUTURE_PHP_VERSION, matrix.php) != true
                with:
                    working-directory: 'requirement-checker'

            -   name: Install Composer dependencies (ignore PHP platform req)
                uses: ramsey/composer-install@v2
                if: contains(env.FUTURE_PHP_VERSION, matrix.php)
                with:
                    composer-options: --ignore-platform-req=php+

            -   name: Install RequirementChecker Composer dependencies (ignore PHP platform req)
                uses: ramsey/composer-install@v2
                if: contains(env.FUTURE_PHP_VERSION, matrix.php)
                with:
                    composer-options: --ignore-platform-req=php+
                    working-directory: 'requirement-checker'

            -   name: Ensure the Makefile does not run the Composer install command a 2nd time
                run: touch -c composer.lock vendor requirement-checker/composer.lock requirement-checker/vendor

            -   name: validate box config
                run: bin/box validate

            -   name: Run tests (PHAR readonly)
                if: matrix.phar-readonly == true
                run: make tu_box_phar_readonly

            -   name: Run tests (PHAR writeable)
                if: matrix.phar-readonly == false
                run: make tu

    infection:
        runs-on: ubuntu-latest
        name: "Infection: ${{ matrix.php }} - ${{ matrix.tools }}"
        strategy:
            fail-fast: false
            matrix:
                php: [ '8.1' ]
                tools: [ "composer:v2" ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 0

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    # The phar.readonly value is adjusted in the Makefile command for
                    # better portability.
                    ini-values: phar.readonly=0, display_errors=On, error_reporting=-1
                    tools: ${{ matrix.tools }}
                    coverage: pcov
                    extensions: ctype, iconv, xml

            -   name: Install Composer dependencies
                uses: ramsey/composer-install@v2

            -   name: Install RequirementChecker Composer dependencies
                uses: ramsey/composer-install@v2
                with:
                    working-directory: 'requirement-checker'

            -   name: Configure Infection for the CI
                run: |
                    git fetch origin $GITHUB_BASE_REF
                    echo "INFECTION_FLAGS=--git-diff-lines --git-diff-base=origin/$GITHUB_BASE_REF --ignore-msi-with-no-mutations --logger-github" >> "$GITHUB_ENV"

            -   name: Run Infection
                run: make tm
