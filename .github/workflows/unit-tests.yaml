name: Unit Tests

on:
    push:
        branches: [ main ]
    pull_request:
    release:
        types: [ created ]

jobs:
    unit-tests:
        runs-on: ubuntu-latest
        name: "Unit-Tests (PHP ${{ matrix.php.version }}, ${{ matrix.php.dependency }}, ${{ matrix.tools }})"
        strategy:
            fail-fast: false
            matrix:
                php:
                    -   version: '8.1'
                        dependency: locked
                        composer-options: ''
#                    -   version: '8.2'
#                        dependency: highest
#                        composer-options: ''
#                    -   version: '8.3'
#                        dependency: highest
#                        composer-options: '--ignore-platform-req=php+'
                tools:
                    - 'composer'
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 0

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php.version }}
                    ini-values: phar.readonly=0, display_errors=On, error_reporting=-1
                    tools: ${{ matrix.tools }}
                    coverage: none
                    extensions: ctype, iconv, xml

            -   name: Install Composer dependencies
                uses: ramsey/composer-install@v2
                with:
                    dependency-versions: '${{ matrix.php.dependency }}'
                    composer-options: '${{ matrix.php.composer-options }}'

            -   name: Ensure that the make target is up to date
                run: make vendor_install

            -   name: Validate box config
                run: bin/box validate

            -   name: Run tests (PHAR readonly)
                run: make tu_box_phar_readonly

            -   name: Run tests (PHAR writeable)
                run: make tu_box

    infection:
        runs-on: ubuntu-latest
        name: "Infection (PHP ${{ matrix.php }})"
        strategy:
            fail-fast: false
            matrix:
                php: [ '8.1' ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 0

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    # The phar.readonly value is adjusted in the Makefile command for
                    # better portability.
                    ini-values: phar.readonly=0, display_errors=On, error_reporting=-1
                    tools: composer
                    coverage: pcov
                    extensions: ctype, iconv, xml

            -   name: Install Composer dependencies
                uses: ramsey/composer-install@v2

            -   name: Ensure that the make target is up to date
                run: make vendor_install

            -   name: Install Infection
                uses: ramsey/composer-install@v2

            -   name: Ensure that the Infection make target is up to date
                run: make infection_install

            -   name: Configure Infection for the CI
                run: |
                    git fetch origin $GITHUB_BASE_REF
                    echo "INFECTION_FLAGS=--git-diff-lines --git-diff-base=origin/$GITHUB_BASE_REF --ignore-msi-with-no-mutations --logger-github" >> "$GITHUB_ENV"

            -   name: Run Infection
                run: make tm

    # This is a "trick", a meta task which does not change, and we can use in
    # the protected branch rules as opposed to the tests one above which
    # may change regularly.
    validate-tests:
        name: Unit tests status
        runs-on: ubuntu-latest
        needs:
            - unit-tests
            - infection
        if: always()
        steps:
            - name: Successful run
              if: ${{ !(contains(needs.*.result, 'failure')) }}
              run: exit 0

            - name: Failing run
              if: ${{ contains(needs.*.result, 'failure') }}
              run: exit 1
